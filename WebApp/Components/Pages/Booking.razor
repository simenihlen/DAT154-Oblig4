@page "/booking"
@using HotelLibrary.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using System.Security.Claims
@attribute [Authorize(Roles = "admin, guest")]
@inject HotelDbContext dx
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Booking</PageTitle>

<h1>Book room</h1>

<h1>Her kan du booke room</h1>
<label>
    Kvalitet:
    <select @bind="valgRomKval">
        @foreach(var vk in roomQuality) {
            <option value="@vk.RoomQuality">@vk.RoomQuality</option>
        }
    </select>
</label><br/>
<lable>Start dato: <input type="date" @bind="startdate"/></lable><br />
<lable>Slutt dato: <input type="date" @bind="enddate"/></lable><br />
<label>Antall personer: <input type="number" @bind="antall"/></label><br />

<button @onclick="bookedRoom">Book rommet</button>

@if (booked) {
    <h2>Roomet er booket</h2>
}

@code {
    private string? valgRomKval;
    private List<Roomdatum> roomQuality = [];
    private DateTime startdate = DateTime.Now;
    private DateTime enddate = DateTime.Now.AddDays(1);
    private int antall = 1;
    private User? user;
    private bool booked;

    protected override async Task OnInitializedAsync() {
        roomQuality = await dx.Roomdata.ToListAsync();
        user = await findUser();
    }

    // private async Task<Roomdatum> getRoom() {
    //     using (var dx = new HotelDbContext()) {
    //         try {
    //             var room = await dx.Roomdata.FirstOrDefaultAsync(r => r.RoomQuality == valgRomKval);
    //             if (room != null) {
    //                 Console.WriteLine("Fant et rom med kvalitet " + room.RoomQuality);
    //                 return room;
    //             } else {
    //                 Console.WriteLine("Fant ikke et rom med med " + valgRomKval);
    //                 return null;
    //             }
    //         } catch(Exception e) {
    //             Console.WriteLine("Error: " + e.Message);
    //             return null;
    //         }
    //     }
    // }

    private async Task<Roomdatum> getRoom() {
        var dx = new HotelDbContext();
        try {
            var room = new Roomdatum {
                RoomQuality = valgRomKval,
                NumberOfBeds = antall
            };
            Console.WriteLine("Rom med " + room.RoomQuality + " kvalitet og " + room.NumberOfBeds + " antall senger.");
            dx.Roomdata.Add(room);
            await dx.SaveChangesAsync();
            return room;
        } catch(Exception e) {

        }
        return null;
    }

    // private async Task<string> getUser() {
    //     var asp = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    //     var user = asp.User;
    //     if (user.Identity.IsAuthenticated) {
    //         return user.Identity.Name;
    //     }
    //     return null;
    // }

    private async Task<string> getUserId() {
        var asp = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = asp.User;
        if (user.Identity.IsAuthenticated)
        {
            return user.FindFirstValue(ClaimTypes.NameIdentifier);
        }
        return null;
    }

    private async Task<User> findUser() {
        User local = null;
        try {
            var userId = await getUserId();
            local = await dx.Users.FirstOrDefaultAsync(u => u.Username == userId);
        } catch (Exception e) {

        }
        return local;
    }

    // Jeg får: 
    // SELECT TOP(1) [u].[id], [u].[email], [u].[password], [u].[phone], [u].[role], [u].[username]
    // FROM[users] AS[u]
    // WHERE 0 = 1
    // Hvis "WHERE 1 = 1" så skal riktig bruker komme ut

    private async Task bookedRoom() {
        try {
            var room = await getRoom();

            var newBooking = new Bookingdatum {
                    Roomid = room.Id,
                    Userid = user.Id,
                    Startdate = startdate,
                    Enddate = enddate,
                    AntallPersoner = antall
            };
            dx.Bookingdata.Add(newBooking);
            dx.SaveChanges();
            booked = true;
        } catch (Exception e) {
            Console.WriteLine("Error: " + e.Message);
        }
    }
}
